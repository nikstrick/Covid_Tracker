{"version":3,"sources":["components/AppNavbar.js","components/About.js","components/DoughnutDisplay.js","components/LineChart.js","components/Tab.js","App.js","index.js"],"names":["AppNavbar","state","isOpen","toggle","setState","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","this","Collapse","navbar","Nav","className","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","props","setCountry","divider","setGlobal","NavbarText","simpleText","Component","aboutStyle","margin","padding","About","style","DoughnutDisplay","Container","data","graphData","options","title","display","text","fontSize","legend","position","graphData2","LineChart","console","log","lineChartData","datasets","Tab","tab","activeTab","setActiveTab","bind","tabs","classnames","active","TabContent","TabPane","tabId","Global","Country","paddingTop","fontWeight","marginLeft","marginRight","backgroundColor","App","Countries","dataByCountry","labels","label","fill","lineTension","borderColor","borderWidth","hoverBackgroundColor","fillData","forEach","element","index","Active","Deaths","Recovered","Date","slice","setCountryData","res","l","length","Confirmed","newConfirmed","Math","abs","newDeaths","newRecovered","splice","lc","axios","get","then","TotalConfirmed","TotalDeaths","TotalRecovered","NewConfirmed","NewDeaths","NewRecovered","exact","path","render","Fragment","component","ReactDOM","paddingLeft","paddingRight","document","getElementById"],"mappings":"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","file":"static/js/main.aaedd7de.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    NavbarText\r\n  } from 'reactstrap';\r\n  \r\n\r\nclass AppNavbar extends Component {\r\n    state={\r\n        isOpen:false,\r\n    }\r\n    toggle = () => \r\n    this.setState({\r\n        isOpen:!this.state.isOpen\r\n    });\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n              <Navbar color=\"warning\" light expand=\"md\">\r\n                <NavbarBrand href=\"/\">COVID19-Tracker</NavbarBrand>\r\n                <NavbarToggler onClick={this.toggle} />\r\n                <Collapse isOpen={this.state.isOpen} navbar>\r\n                  <Nav className=\"mr-auto\" navbar>\r\n                    <NavItem>\r\n                    <NavLink href='./About'>About</NavLink>\r\n                    </NavItem>\r\n                    <UncontrolledDropdown nav inNavbar>\r\n                      <DropdownToggle nav caret>\r\n                        Countries\r\n                      </DropdownToggle>\r\n                      <DropdownMenu right>\r\n                        <DropdownItem onClick={()=>{this.props.setCountry('India')}}>\r\n                        India\r\n                        </DropdownItem>\r\n                        <DropdownItem onClick={()=>{this.props.setCountry('Italy')}}>\r\n                        Italy\r\n                        </DropdownItem>\r\n                        <DropdownItem onClick={()=>{this.props.setCountry('Pakistan')}}>\r\n                        Pakistan\r\n                        </DropdownItem>\r\n                        <DropdownItem onClick={()=>{this.props.setCountry('United States of America')}}>\r\n                        United States\r\n                        </DropdownItem>\r\n                        <DropdownItem divider />\r\n                        <DropdownItem onClick={()=>{this.props.setGlobal()}}>\r\n                          Global\r\n                        </DropdownItem>\r\n                      </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n                  </Nav>\r\n                  <NavbarText>{this.props.simpleText}</NavbarText>\r\n                </Collapse>\r\n              </Navbar>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\nexport default AppNavbar\r\n","import React from 'react'\r\nimport AppNavbar from './AppNavbar'\r\n\r\nfunction About() {\r\n    return (\r\n        <div>\r\n        <AppNavbar/>\r\n        <div style={aboutStyle}>\r\n            <h4>Greetings From Developer....</h4>\r\n            <h5>This app provides the daily status of COVID19 cases around the world</h5>\r\n            <h5>It gives you detail summary of cases in some Countries in the list</h5>\r\n            <br></br>\r\n            <h6>\r\n                Contact-\r\n            </h6>\r\n            <p><a href=\"https://www.linkedin.com/in/nikhil-ranjan-niks\">Linkedin Profile</a></p>\r\n            <p><a href=\"https://github.com/nikstrick\">Github Profile</a></p>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\nconst aboutStyle={\r\n    margin:'10px',\r\n    padding:'10px'\r\n}\r\nexport default About","import React,{Component}from 'react';\r\nimport {Doughnut} from 'react-chartjs-2';\r\nimport {Container} from 'reactstrap'\r\n\r\n\r\n\r\nclass DoughnutDisplay extends Component{\r\n  \r\n  render(){\r\n    // console.log(this.props.graphData)\r\n    return (\r\n      <Container>\r\n        <Doughnut\r\n          data={this.props.graphData}\r\n          options={{\r\n            title:{\r\n              display:true,\r\n              text:'Total Cases',\r\n              fontSize:20\r\n            },\r\n            legend:{\r\n              display:true,\r\n              position:'right'\r\n            }\r\n          }}\r\n        />\r\n        <Doughnut\r\n          data={this.props.graphData2}\r\n          options={{\r\n            title:{\r\n              display:true,\r\n              text:'New Cases Today',\r\n              fontSize:20\r\n            },\r\n            legend:{\r\n              display:true,\r\n              position:'right'\r\n            }\r\n          }}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n    \r\n  }\r\n\r\nexport default DoughnutDisplay","import React, { Component } from 'react'\r\nimport {Line} from 'react-chartjs-2';\r\nclass LineChart extends Component {\r\n    \r\n    render() {\r\n        console.log(this.props.lineChartData.datasets[0].data)\r\n        return (\r\n          <div>\r\n            <Line\r\n              data={this.props.lineChartData}\r\n              options={{\r\n                title:{\r\n                  display:true,\r\n                  text:'Each Day Status',\r\n                  fontSize:20\r\n                },\r\n                legend:{\r\n                  display:true,\r\n                  position:'bottom'\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default LineChart\r\n","import React, { Component} from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport DoughnutDisplay from './DoughnutDisplay';\r\nimport LineChart from './LineChart';\r\n\r\nclass Tab extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      activeTab:1,\r\n      setActiveTab:1\r\n    }\r\n    this.toggle=this.toggle.bind(this)\r\n  }\r\n    \r\n\r\n    toggle=(tab)=>{\r\n        this.setState({\r\n            activeTab:tab});\r\n    }\r\n    \r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n              <Nav style={{color:'red'}} tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({ active: this.state.activeTab === '1' })}\r\n                    onClick={() => { this.toggle('1'); }}\r\n                  >\r\n                    Aggregate Comparision\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({ active: this.state.activeTab === '2' })}\r\n                    onClick={() => { this.toggle('2'); }}\r\n                  >\r\n                    Individual Day Chart\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n              <TabContent activeTab={this.state.activeTab}>\r\n                <TabPane tabId=\"1\">\r\n                \r\n                  <DoughnutDisplay Global={this.props.Global} Country={this.props.Country} graphData={this.props.graphData} graphData2={this.props.graphData2}/>\r\n                </TabPane>\r\n                <TabPane tabId=\"2\">\r\n                <LineChart lineChartData={this.props.lineChartData}/>\r\n                </TabPane>\r\n              </TabContent>\r\n              <div style={{paddingTop:'60px'}}>\r\n              <p style={{fontWeight:'bold',marginLeft:'20px',marginRight:'20px',backgroundColor:'#ccc'}}>\r\n                Coronavirus disease (COVID-19) is an infectious disease caused by a newly discovered coronavirus.\r\n                Most people who fall sick with COVID-19 will experience mild to moderate symptoms and recover without special treatment.\r\n                </p>\r\n                <p style={{marginLeft:'20px'}}>\r\n                HOW IT SPREADS-\r\n                The virus that causes COVID-19 is mainly transmitted through droplets generated when an infected person coughs, sneezes, or exhales. These droplets are too heavy to hang in the air, and quickly fall on floors or surfaces.\r\n                You can be infected by breathing in the virus if you are within close proximity of someone who has COVID-19, or by touching a contaminated surface and then your eyes, nose or mouth.\r\n              </p>\r\n              </div>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\nexport default Tab","import React, { Component } from 'react';\nimport axios from 'axios';\nimport {BrowserRouter as Router,Route} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AppNavbar from'./components/AppNavbar';\nimport About from './components/About';\nimport Tab from './components/Tab'\n\n\nclass App extends Component {\n  state={\n    Global:{},\n    Countries:[],\n    Country:{},\n    simpleText:'',\n    dataByCountry:[],\n    lineChartData:{labels: [],\n          datasets: [\n          {\n          label: 'Acitve',\n          fill: false,\n          lineTension: 1,\n          backgroundColor: 'blue',\n          borderColor: 'blue',\n          borderWidth: 1,\n          data: []\n          },\n          {\n          label: 'Deaths',\n          fill: false,\n          lineTension: 1,\n          backgroundColor: 'red',\n          borderColor: 'red',\n          borderWidth: 1,\n          data: []\n          },\n          {\n          label: 'Recovered',\n          fill: false,\n          lineTension: 1,\n          backgroundColor: 'green',\n          borderColor: 'green',\n          borderWidth: 1,\n          data: []\n          }\n      ]},\n    graphData:{labels: ['Confirmed','Deaths','Recovered'],\n    datasets: [\n      {\n        label: 'Total Cases',\n        backgroundColor: [\n          '#00A6B4',\n          '#B21F00',\n          '#2FDE00',\n          '#6800B4'\n        ],\n        hoverBackgroundColor: [\n        '#003350',\n        '#501800',\n        '#175000',\n        '#35014F'\n        ],\n        data: [100,10,15]\n      }\n    ]\n    },\n    graphData2:{labels: ['Confirmed','Deaths','Recovered'],\n    datasets: [\n      {\n        label: 'New Cases Today',\n        backgroundColor: [\n          '#00A6B4',\n          '#B21F00',\n          '#2FDE00',\n          '#6800B4'\n        ],\n        hoverBackgroundColor: [\n        '#003350',\n        '#501800',\n        '#175000',\n        '#35014F'\n        ],\n        data: [100,10,15]\n      }\n    ]\n    },\n}\n  \n  componentDidMount(){\n    axios.get('https://api.covid19api.com/summary')\n    .then(res=>\n      this.setState({Global:res.data.Global,Countries: res.data.Countries}))\n   }\n   fillData=(data)=>{\n    const lineChartData={...this.state.lineChartData}\n    const {datasets,labels}=lineChartData\n    data.forEach((element,index) => {\n      const{Active,Deaths,Recovered}=element\n      datasets[0].data[index]=Active\n      datasets[1].data[index]=Deaths\n      datasets[2].data[index]=Recovered\n      labels[index]=element.Date.slice(8,10)+'/'+element.Date.slice(5,7)\n    });\n    return lineChartData\n   }\n   setCountryData=(res)=>{\n     const{data}=res\n     const graphData={...this.state.graphData}\n     const graphData2={...this.state.graphData2}\n     const l=data.length\n     const{Confirmed,Deaths,Recovered,Active,Country}=data[l-1]\n     const newConfirmed=Math.abs(Confirmed-data[l-2].Confirmed)\n     const newDeaths=Math.abs(Deaths-data[l-2].Deaths)\n     const newRecovered=Math.abs(Recovered-data[l-2].Recovered)\n     graphData.labels=['Active: '+Active,'Deaths: '+Deaths,'Recovered: '+Recovered]\n     graphData2.labels=['Confirmed: '+newConfirmed,'Deaths: '+newDeaths,'Recovered: '+newRecovered]\n     graphData.datasets[0].data=[Active,Deaths,Recovered]\n     graphData2.datasets[0].data=[newConfirmed,newDeaths,newRecovered]\n     const lineChartData=this.fillData(data,l)\n    // const lineChartData={...this.state.lineChartData}\n    const {datasets}=lineChartData\n    datasets[0].data.splice(0,data.length)\n    datasets[1].data.splice(0,data.length)\n    datasets[2].data.splice(0,data.length)\n    const lc=this.fillData(data)\n    this.setState({dataByCountry:data ,graphData:graphData,graphData2:graphData2,simpleText:Country,lineChartData:lc})\n   }\n   setCountry=(Country)=>{ \n     if(Country==='India')\n      axios.get('https://api.covid19api.com/total/country/india').then(res=>this.setCountryData(res))\n      else if(Country==='Pakistan')\n      axios.get('https://api.covid19api.com/total/country/pakistan').then(res=>this.setCountryData(res))\n      else if(Country==='Italy')\n      axios.get('https://api.covid19api.com/total/country/italy').then(res=>this.setCountryData(res))\n      else \n      axios.get('https://api.covid19api.com/total/country/united-states').then(res=>this.setCountryData(res))\n    }\n    setGlobal=()=>{\n      const graphData={...this.state.graphData}\n      const graphData2={...this.state.graphData2}\n      const {Global}=this.state\n     graphData.labels=['Confirmed: '+Global.TotalConfirmed,'Deaths: '+Global.TotalDeaths,'Recovered: '+Global.TotalRecovered]\n     graphData.datasets[0].data=[Global.TotalConfirmed,Global.TotalDeaths,Global.TotalRecovered]\n     graphData2.labels=['Confirmed: '+Global.NewConfirmed,'Deaths: '+Global.NewDeaths,'Recovered: '+Global.NewRecovered]\n     graphData2.datasets[0].data=[Global.NewConfirmed,Global.NewDeaths,Global.NewRecovered]\n     this.setState({simpleText:'Global',graphData:graphData,graphData2:graphData2})\n    }\n    \n  render() {\n    // console.log(this.state.lineChartData)\n    return (\n      <Router>\n        <div>\n        <Route exact path='/' render={props=>(\n          \n              <React.Fragment>\n                <AppNavbar setCountry={this.setCountry} setGlobal={this.setGlobal} simpleText={this.state.simpleText}/>\n                <Tab Global={this.state.Global} Country={this.state.Country} graphData={this.state.graphData} graphData2={this.state.graphData2} lineChartData={this.state.lineChartData}/>\n              </React.Fragment>\n          )}/>\n        <Route path='/about'component={About}/>\n        </div>\n      </Router>\n    )\n  }\n  }\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n    <footer>\n      <p style={{paddingLeft:'10px',paddingRight:'10px',fontSize:'10px'}}>\n        Disclaimer-The above Stats are accurate but not exact.Since the app uses public api to get data the accuracy may dissolve in days ahead \n      </p>\n    </footer>\n  </React.Fragment>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}