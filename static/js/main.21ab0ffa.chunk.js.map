{"version":3,"sources":["components/AppNavbar.js","components/About.js","components/DoughnutDisplay.js","components/LineChart.js","components/Cards.js","components/Tab.js","App.js","index.js"],"names":["AppNavbar","state","isOpen","toggle","setState","Navbar","color","light","expand","NavbarBrand","style","to","NavbarToggler","onClick","this","Collapse","navbar","Nav","className","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","props","setCountry","divider","setGlobal","NavbarText","simpleText","Component","aboutStyle","margin","padding","About","href","DoughnutDisplay","Container","backgroundColor","marginTop","data","graphData","options","title","display","text","fontSize","legend","position","graphData2","LineChart","console","log","lineChartData","datasets","CardStyle","marginLeft","marginBottom","border","borderColor","borderWidth","Cards","Row","Col","Card","body","inverse","CardTitle","Date","slice","CardText","Tab","useState","activeTab","setActiveTab","tab","marginRight","tabs","paddingLeft","paddingRight","classnames","active","TabContent","TabPane","tabId","Global","Country","fontWeight","App","Countries","dataByCountry","labels","label","fill","lineTension","hoverBackgroundColor","fillData","forEach","element","index","Active","Deaths","Recovered","setCountryData","res","a","l","length","Confirmed","newConfirmed","Math","abs","newDeaths","newRecovered","splice","lc","axios","get","then","TotalConfirmed","TotalDeaths","TotalRecovered","NewConfirmed","NewDeaths","NewRecovered","temp","exact","path","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.21ab0ffa.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    NavbarText\r\n  } from 'reactstrap';\r\n  \r\n\r\nclass AppNavbar extends Component {\r\n    state={\r\n        isOpen:false,\r\n    }\r\n    toggle = () => \r\n    this.setState({\r\n        isOpen:!this.state.isOpen\r\n    });\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n              <Navbar color=\"warning\" light expand=\"md\">\r\n                <NavbarBrand ><Link style={{color:'black'}} to=\"/\">COVID19-Tracker</Link></NavbarBrand>\r\n                <NavbarToggler onClick={this.toggle} />\r\n                <Collapse isOpen={this.state.isOpen} navbar>\r\n                  <Nav className=\"mr-auto\" navbar>\r\n                    <NavItem>\r\n                    <NavLink><Link style={{color:'black'}} to=\"/about\">About</Link></NavLink>\r\n                    </NavItem>\r\n                    <UncontrolledDropdown nav inNavbar>\r\n                      <DropdownToggle nav caret>\r\n                        Countries\r\n                      </DropdownToggle>\r\n                      <DropdownMenu right>\r\n                        <DropdownItem onClick={()=>{this.props.setCountry('India')}}>\r\n                        India\r\n                        </DropdownItem>\r\n                        <DropdownItem onClick={()=>{this.props.setCountry('Italy')}}>\r\n                        Italy\r\n                        </DropdownItem>\r\n                        <DropdownItem onClick={()=>{this.props.setCountry('China')}}>\r\n                        China\r\n                        </DropdownItem>\r\n                        <DropdownItem onClick={()=>{this.props.setCountry('United States of America')}}>\r\n                        United States\r\n                        </DropdownItem>\r\n                        <DropdownItem divider />\r\n                        <DropdownItem onClick={()=>{this.props.setGlobal()}}>\r\n                          Global\r\n                        </DropdownItem>\r\n                      </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n                  </Nav>\r\n                  <NavbarText>{this.props.simpleText}</NavbarText>\r\n                </Collapse>\r\n              </Navbar>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\nexport default AppNavbar\r\n","import React from 'react'\r\n\r\nfunction About() {\r\n    return (\r\n        <div style={aboutStyle}>\r\n            <h4>Greetings From Developer....</h4>\r\n            <h5>This app provides the daily status of COVID19 cases around the world</h5>\r\n            <h5>It gives you detail summary of cases in some Countries in the list</h5>\r\n            <br></br>\r\n            <h6>\r\n                Contact-\r\n            </h6>\r\n            <p><a href=\"https://www.linkedin.com/in/nikhil-ranjan-niks\">Linkedin Profile</a></p>\r\n            <p><a href=\"https://github.com/nikstrick\">Github Profile</a></p>\r\n        </div>\r\n    )\r\n}\r\nconst aboutStyle={\r\n    margin:'10px',\r\n    padding:'10px'\r\n}\r\nexport default About","import React,{Component}from 'react';\r\nimport {Doughnut} from 'react-chartjs-2';\r\nimport {Container} from 'reactstrap'\r\n\r\n\r\n\r\nclass DoughnutDisplay extends Component{\r\n  \r\n  render(){\r\n    // console.log(this.props.graphData)\r\n    return (\r\n      <Container style={{backgroundColor:'rgb(255,220,193)',marginTop:'10px'}}>\r\n        <Doughnut \r\n          data={this.props.graphData}\r\n          options={{\r\n            title:{\r\n              display:true,\r\n              text:'Total Cases',\r\n              fontSize:20\r\n            },\r\n            legend:{\r\n              display:true,\r\n              position:'right'\r\n            }\r\n          }}\r\n        />\r\n        <Doughnut\r\n          data={this.props.graphData2}\r\n          options={{\r\n            title:{\r\n              display:true,\r\n              text:'New Cases Today',\r\n              fontSize:20\r\n            },\r\n            legend:{\r\n              display:true,\r\n              position:'right'\r\n            }\r\n          }}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n    \r\n  }\r\n\r\nexport default DoughnutDisplay","import React, { Component } from 'react'\r\nimport {Line} from 'react-chartjs-2';\r\nimport {Container} from 'reactstrap'\r\nclass LineChart extends Component {\r\n    \r\n    render() {\r\n        console.log(this.props.lineChartData.datasets[0].data)\r\n        return (\r\n          <Container style={{backgroundColor:'white',marginTop:'10px'}}>\r\n            <Line\r\n              data={this.props.lineChartData}\r\n              options={{\r\n                title:{\r\n                  display:true,\r\n                  text:'Each Day Status',\r\n                  fontSize:20\r\n                },\r\n                legend:{\r\n                  display:true,\r\n                  position:'bottom'\r\n                }\r\n              }}\r\n            />\r\n          </Container>\r\n        );\r\n      }\r\n}\r\n\r\nexport default LineChart\r\n","import React from 'react';\r\nimport { Container,Row,Card, CardTitle, CardText, Col } from 'reactstrap';\r\n\r\n\r\nconst Cards= (props) => {\r\n  return (\r\n    <Container style={{backgroundColor:'grey'}}>\r\n      <Row>\r\n      <Col>\r\n      <Card body inverse color=\"info\" style={CardStyle}>\r\n        <CardTitle>Active Cases- Till Now({Date().slice(0,11)})</CardTitle>\r\n        <CardText style={{fontSize:'30px'}}>{props.graphData.datasets[0].data[0]}</CardText>\r\n        \r\n      </Card>\r\n      </Col>\r\n      <Col>\r\n      <Card body inverse color=\"danger\" style={CardStyle}>\r\n        <CardTitle>Deaths Cases- Till Now({Date().slice(0,11)})</CardTitle>\r\n        <CardText style={{fontSize:'30px'}}>{props.graphData.datasets[0].data[1]}</CardText>\r\n        \r\n      </Card>\r\n      </Col>\r\n      <Col>\r\n      <Card body inverse color=\"success\" style={CardStyle}>\r\n        <CardTitle>Recovered Cases- Till Now({Date().slice(0,11)})</CardTitle>\r\n        <CardText style={{fontSize:'30px'}}>{props.graphData.datasets[0].data[2]}</CardText>\r\n        \r\n      </Card>\r\n      </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nconst CardStyle={\r\n  marginLeft:'5px',\r\n  marginTop:'20px',\r\n  marginBottom:'10px',\r\n  border:'solid',\r\n  borderColor:'rgb(100,100,100)',\r\n  borderWidth:'2px',\r\n  \r\n}\r\n\r\nexport default Cards;","import React, { useState} from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport {Container} from 'reactstrap'\r\nimport DoughnutDisplay from './DoughnutDisplay';\r\nimport LineChart from './LineChart';\r\nimport Cards from './Cards';\r\n\r\nconst Tab =props=> {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n        return (\r\n            <div style={{marginRight:'10px',marginLeft:'10px',backgroundColor:'#f1f1f1'}}>\r\n              <Nav style={{color:'red',backgroundColor:'rgb(255,220,193)'}} tabs>\r\n                <NavItem style={{paddingLeft:'5px',paddingRight:'5px'}}>\r\n                  <NavLink style={{backgroundColor:'#f1f1f1'}}\r\n                    className={classnames({ active: activeTab === '1' })}\r\n                    onClick={() => { toggle('1'); }}\r\n                  >\r\n                    Aggregate Comparision\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem >\r\n                  <NavLink style={{backgroundColor:'#f1f1f1'}}\r\n                    className={classnames({ active: activeTab === '2' })}\r\n                    onClick={() => { toggle('2'); }}\r\n                  >\r\n                    Individual Day Chart\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n              <TabContent activeTab={activeTab}>\r\n                <TabPane tabId=\"1\">\r\n                  <Cards graphData={props.graphData}/>\r\n                  <DoughnutDisplay Global={props.Global} Country={props.Country} graphData={props.graphData} graphData2={props.graphData2}/>\r\n                </TabPane>\r\n                <TabPane tabId=\"2\">\r\n                <LineChart lineChartData={props.lineChartData}/>\r\n                </TabPane>\r\n              </TabContent>\r\n              <Container style={{marginTop:'50px'}}>\r\n              <p style={{fontWeight:'bold',marginLeft:'20px',marginRight:'20px',backgroundColor:'#ccc'}}>\r\n                Coronavirus disease (COVID-19) is an infectious disease caused by a newly discovered coronavirus.\r\n                Most people who fall sick with COVID-19 will experience mild to moderate symptoms and recover without special treatment.\r\n                </p>\r\n                <p style={{marginLeft:'20px'}}>\r\n                HOW IT SPREADS-\r\n                The virus that causes COVID-19 is mainly transmitted through droplets generated when an infected person coughs, sneezes, or exhales. These droplets are too heavy to hang in the air, and quickly fall on floors or surfaces.\r\n                You can be infected by breathing in the virus if you are within close proximity of someone who has COVID-19, or by touching a contaminated surface and then your eyes, nose or mouth.\r\n              </p>\r\n              </Container>\r\n            </div>\r\n          );\r\n    \r\n}\r\n\r\nexport default Tab","import React, { Component } from 'react';\nimport axios from 'axios';\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AppNavbar from'./components/AppNavbar';\nimport About from './components/About';\nimport Tab from './components/Tab'\n\n\nclass App extends Component {\n  state={\n    Global:{},\n    Countries:[],\n    Country:{},\n    simpleText:'',\n    dataByCountry:[],\n    lineChartData:{labels: [],\n          datasets: [\n          {\n          label: 'Acitve',\n          fill: false,\n          lineTension: 1,\n          backgroundColor: 'blue',\n          borderColor: 'blue',\n          borderWidth: 1,\n          data: []\n          },\n          {\n          label: 'Deaths',\n          fill: false,\n          lineTension: 1,\n          backgroundColor: 'red',\n          borderColor: 'red',\n          borderWidth: 1,\n          data: []\n          },\n          {\n          label: 'Recovered',\n          fill: false,\n          lineTension: 1,\n          backgroundColor: 'green',\n          borderColor: 'green',\n          borderWidth: 1,\n          data: []\n          }\n      ]},\n    graphData:{labels: ['Active','Deaths','Recovered'],\n    datasets: [\n      {\n        label: 'Total Cases',\n        backgroundColor: [\n          '#00A6B4',\n          '#B21F00',\n          '#2FDE00',\n          '#6800B4'\n        ],\n        hoverBackgroundColor: [\n        '#003350',\n        '#501800',\n        '#175000',\n        '#35014F'\n        ],\n        data: [100,10,15]\n      }\n    ]\n    },\n    graphData2:{labels: ['Active','Deaths','Recovered'],\n    datasets: [\n      {\n        label: 'New Cases Today',\n        backgroundColor: [\n          '#00A6B4',\n          '#B21F00',\n          '#2FDE00',\n          '#6800B4'\n        ],\n        hoverBackgroundColor: [\n        '#003350',\n        '#501800',\n        '#175000',\n        '#35014F'\n        ],\n        data: [100,10,15]\n      }\n    ]\n    },\n}\n  \n  componentDidMount(){\n    const graphData={...this.state.graphData}\n    const graphData2={...this.state.graphData2}\n    axios.get('https://api.covid19api.com/summary')\n    .then(res=>{\n      const {TotalConfirmed,TotalDeaths,TotalRecovered,NewConfirmed,NewDeaths,NewRecovered}=res.data.Global\n      graphData.datasets[0].data=[TotalConfirmed-TotalDeaths-TotalRecovered,TotalDeaths,TotalRecovered]\n      graphData2.datasets[0].data=[NewConfirmed,NewDeaths,NewRecovered]\n      this.setState({Global:res.data.Global,Countries: res.data.Countries,graphData:graphData,graphData2:graphData2,simpleText:'Global'})})\n   }\n   fillData=(data)=>{\n    const lineChartData={...this.state.lineChartData}\n    const {datasets,labels}=lineChartData\n    data.forEach((element,index) => {\n      const{Active,Deaths,Recovered}=element\n      datasets[0].data[index]=Active\n      datasets[1].data[index]=Deaths\n      datasets[2].data[index]=Recovered\n      labels[index]=element.Date.slice(8,10)+'/'+element.Date.slice(5,7)\n    });\n    return lineChartData\n   }\n   setCountryData=async(res)=>{\n     const{data}=res\n     const graphData={...this.state.graphData}\n     const graphData2={...this.state.graphData2}\n     const l=data.length\n     const{Confirmed,Deaths,Recovered,Active,Country}=data[l-1]\n     const newConfirmed=Math.abs(Confirmed-data[l-2].Confirmed)\n     const newDeaths=Math.abs(Deaths-data[l-2].Deaths)\n     const newRecovered=Math.abs(Recovered-data[l-2].Recovered)\n     graphData.labels=['Active: '+Active,'Deaths: '+Deaths,'Recovered: '+Recovered]\n     graphData2.labels=['Confirmed: '+newConfirmed,'Deaths: '+newDeaths,'Recovered: '+newRecovered]\n     graphData.datasets[0].data=[Active,Deaths,Recovered]\n     graphData2.datasets[0].data=[newConfirmed,newDeaths,newRecovered]\n     const lineChartData=this.fillData(data,l)\n    // const lineChartData={...this.state.lineChartData}\n    const {datasets}=lineChartData\n    datasets[0].data.splice(0,data.length)\n    datasets[1].data.splice(0,data.length)\n    datasets[2].data.splice(0,data.length)\n    const lc=this.fillData(data)\n    this.setState({dataByCountry:data ,graphData:graphData,graphData2:graphData2,simpleText:Country,lineChartData:lc})\n   }\n   setCountry=async(Country)=>{ \n     if(Country==='India')\n      axios.get('https://api.covid19api.com/total/country/india').then(res=>this.setCountryData(res))\n      else if(Country==='China')\n      axios.get('https://api.covid19api.com/total/country/china').then(res=>this.setCountryData(res))\n      else if(Country==='Italy')\n      axios.get('https://api.covid19api.com/total/country/italy').then(res=>this.setCountryData(res))\n      else \n      axios.get('https://api.covid19api.com/total/country/united-states').then(res=>this.setCountryData(res))\n    }\n    setGlobal=()=>{\n      const graphData={...this.state.graphData}\n      const graphData2={...this.state.graphData2}\n      const {TotalConfirmed,TotalDeaths,TotalRecovered,NewConfirmed,NewDeaths,NewRecovered}=this.state.Global\n      const temp=TotalConfirmed-TotalDeaths-TotalRecovered\n     graphData.labels=['Acitve: '+temp,'Deaths: '+TotalDeaths,'Recovered: '+TotalRecovered]\n     graphData.datasets[0].data=[temp,TotalDeaths,TotalRecovered]\n     graphData2.labels=['Active: '+NewConfirmed,'Deaths: '+NewDeaths,'Recovered: '+NewRecovered]\n     graphData2.datasets[0].data=[NewConfirmed,NewDeaths,NewRecovered]\n     this.setState({simpleText:'Global',graphData:graphData,graphData2:graphData2})\n    }\n    \n  render() {\n    // console.log(this.state.lineChartData)\n    return (\n      <Router>\n        <div>\n        <AppNavbar setCountry={this.setCountry} setGlobal={this.setGlobal} simpleText={this.state.simpleText}/>\n        <Switch>\n        <Route exact path='/'>\n            <Tab   Global={this.state.Global} Country={this.state.Country} graphData={this.state.graphData} graphData2={this.state.graphData2} lineChartData={this.state.lineChartData}/>\n        </Route>\n        <Route exact path='/about'>\n          <About/>\n        </Route>\n        </Switch>\n        </div>\n      </Router>\n    )\n  }\n  }\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n    {/* <footer>\n      <p style={{paddingLeft:'10px',paddingRight:'10px',fontSize:'10px'}}>\n        Disclaimer-The above Stats are accurate but not exact.Since the app uses public api to get data the accuracy may dissolve in days ahead \n      </p>\n    </footer> */}\n  </React.Fragment>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}